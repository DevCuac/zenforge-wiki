---
interface Props {
  name: string;
  type?: 'folder' | 'file' | 'symlink';
  icon?: string;
  size?: string;
  modified?: string;
  highlighted?: boolean;
  collapsible?: boolean;
  defaultExpanded?: boolean;
}

const { 
  name, 
  type = 'file', 
  icon,
  size,
  modified,
  highlighted = false,
  collapsible = false,
  defaultExpanded = true
} = Astro.props;

const fileExtension = type === 'file' ? name.split('.').pop()?.toLowerCase() : null;

const getFileIcon = (ext: string | null | undefined, type: string) => {
  if (icon) return icon;
  
  if (type === 'folder') {
    return `<path d="M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" fill="#60a5fa"/>`;
  }
  
  if (type === 'symlink') {
    return `<path fill-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule="evenodd" fill="#a78bfa"/>`;
  }
  
  const iconMap: Record<string, string> = {
    'js': `<path d="M2 3a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H3a1 1 0 01-1-1V3z" fill="#f7df1e"/><path d="M12 14a2 2 0 01-2-2v-2h1v2a1 1 0 002 0v-2h1v2a2 2 0 01-2 2zm-4 0c-1.1 0-2-.9-2-2h1c0 .55.45 1 1 1s1-.45 1-1c0-1.1-.9-2-2-2h-1v-1h1c1.1 0 2 .9 2 2 0 1.1-.9 2-2 2z" fill="#000"/>`,
    'ts': `<path d="M2 3a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H3a1 1 0 01-1-1V3z" fill="#3178c6"/><path d="M9.5 8.5V7h5v1.5h-2V16h-1V8.5h-2zM7 8.5c.28 0 .5.22.5.5s-.22.5-.5.5-.5-.22-.5-.5.22-.5.5-.5zM6 10h2v1H7v4H6v-5z" fill="#fff"/>`,
    'html': `<path d="M2 3a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H3a1 1 0 01-1-1V3z" fill="#e34c26"/><path d="M5 6l.5 8L10 15l4.5-1L15 6H5zm7.5 2.5H8v1h3.5l-.5 4L10 14l-1-.5-.5-4H10v-1H6.5l.5 6L10 16l3-1.5.5-6z" fill="#fff"/>`,
    'css': `<path d="M2 3a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H3a1 1 0 01-1-1V3z" fill="#1572b6"/><path d="M5 6l.5 8L10 15l4.5-1L15 6H5zm7.5 2.5H8v1h3.5l-.5 4L10 14l-1-.5-.5-4H10v-1H6.5l.5 6L10 16l3-1.5.5-6z" fill="#fff"/>`,
    'json': `<path d="M2 3a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H3a1 1 0 01-1-1V3z" fill="#000"/><path d="M7 8c0-1 .5-1.5 1.5-1.5S10 7 10 8v1c0 .5-.5 1-1 1s-1 .5-1 1v1c0 1-.5 1.5-1.5 1.5S5 13 5 12h1c0 .5.5.5.5.5s.5 0 .5-.5v-1c0-1 .5-1.5 1.5-1.5S10 10 10 11v1c0 .5.5.5.5.5s.5 0 .5-.5V11c0-1 .5-1.5 1.5-1.5S15 10 15 11h-1c0-.5-.5-.5-.5-.5s-.5 0-.5.5v1c0 1-.5 1.5-1.5 1.5S10 13 10 12v-1c0-.5.5-1 1-1s1-.5 1-1V8c0-1 .5-1.5 1.5-1.5S15 7 15 8H7z" fill="#ffd700"/>`,
    'md': `<path d="M2 3a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H3a1 1 0 01-1-1V3z" fill="#083fa1"/><path d="M6 7v6l2-2 2 2V7h1v8H8l-2-2-2 2H3V7h3zm7 0h3v1h-2v1h2v1h-2v4h-1V7z" fill="#fff"/>`,
    'py': `<path d="M2 3a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H3a1 1 0 01-1-1V3z" fill="#3776ab"/><path d="M7.5 6c.83 0 1.5.67 1.5 1.5v2c0 .83-.67 1.5-1.5 1.5h-2v1h3v1h-4V7.5C5 6.67 5.67 6 6.5 6h1zm0 1h-1c-.28 0-.5.22-.5.5V9h2V7.5c0-.28-.22-.5-.5-.5zm5 0c-.83 0-1.5.67-1.5 1.5v4c0 .83.67 1.5 1.5 1.5h1c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5h-1zm0 1h1c.28 0 .5.22.5.5v4c0 .28-.22.5-.5.5h-1c-.28 0-.5-.22-.5-.5v-4c0-.28.22-.5.5-.5z" fill="#fff"/>`,
    'default': `<path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd" fill="#64748b"/>`
  };
  
  return iconMap[ext || ''] || iconMap.default;
};

const hasChildren = Astro.slots.has('default');
const itemId = `file-${Math.random().toString(36).substr(2, 9)}`;
---

<div class:list={["zen-file-item", type, { highlighted, 'has-children': hasChildren }]}>
  {collapsible && hasChildren ? (
    <details class="zen-file-collapsible" open={defaultExpanded}>
      <summary class="zen-file-header" id={itemId}>
        <span class="zen-file-toggle" aria-hidden="true">
          <svg class="zen-chevron" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
          </svg>
        </span>
        
        <span class="zen-file-icon" aria-hidden="true">
          <svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <Fragment set:html={getFileIcon(fileExtension, type)} />
          </svg>
        </span>
        
        <span class="zen-file-name">{name}</span>
        
        {size && (
          <span class="zen-file-meta zen-file-size">{size}</span>
        )}
        
        {modified && (
          <span class="zen-file-meta zen-file-modified">{modified}</span>
        )}
      </summary>
      
      {hasChildren && 
        <div class="zen-file-children">
          <slot />
        </div>
      }
    </details>
  ) : (
    <div class="zen-file-header" id={itemId}>
      <span class="zen-file-icon" aria-hidden="true">
        <svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <Fragment set:html={getFileIcon(fileExtension, type)} />
        </svg>
      </span>
      
      <span class="zen-file-name">{name}</span>
      
      {size && (
        <span class="zen-file-meta zen-file-size">{size}</span>
      )}
      
      {modified && (
        <span class="zen-file-meta zen-file-modified">{modified}</span>
      )}
    </div>
  
  )}
</div>

<style>
  .zen-file-item {
    --file-item-padding: var(--zen-space-xs, 0.5rem);
    --file-item-gap: var(--zen-space-sm, 0.75rem);
    --file-icon-size: 1.25rem;
    --file-toggle-size: 1rem;
    
    position: relative;
    margin-bottom: var(--tree-gap);
  }
  
  .zen-file-item:last-child {
    margin-bottom: 0;
  }
  
  .zen-file-header {
    display: flex;
    align-items: center;
    gap: var(--file-item-gap);
    padding: var(--file-item-padding);
    color: var(--tree-text);
    border-radius: var(--zen-radius-sm, 0.5rem);
    transition: all 0.2s var(--zen-ease, cubic-bezier(0.4, 0, 0.2, 1));
    cursor: default;
    position: relative;
  }
  
  .zen-file-item.highlighted .zen-file-header {
    background: var(--sl-color-accent-low, rgba(14, 165, 233, 0.1));
    color: var(--zen-primary-600, #0284c7);
    font-weight: 600;
  }
  
  .zen-file-header:hover {
    background: var(--sl-color-accent-low, rgba(14, 165, 233, 0.05));
    transform: translateX(2px);
  }
  
  .zen-file-collapsible summary {
    cursor: pointer;
    list-style: none;
    user-select: none;
  }
  
  .zen-file-collapsible summary::-webkit-details-marker {
    display: none;
  }
  
  .zen-file-toggle {
    flex-shrink: 0;
    width: var(--file-toggle-size);
    height: var(--file-toggle-size);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--tree-text-muted);
    transition: all 0.2s var(--zen-ease, cubic-bezier(0.4, 0, 0.2, 1));
  }
  
  .zen-chevron {
    width: 100%;
    height: 100%;
    transform: rotate(0deg);
    transition: transform 0.2s var(--zen-ease, cubic-bezier(0.4, 0, 0.2, 1));
  }
  
  .zen-file-collapsible[open] .zen-chevron {
    transform: rotate(90deg);
  }
  
  .zen-file-icon {
    flex-shrink: 0;
    width: var(--file-icon-size);
    height: var(--file-icon-size);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .zen-file-icon svg {
    width: 100%;
    height: 100%;
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
  }
  
  .zen-file-name {
    flex: 1;
    font-weight: 500;
    min-width: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .zen-file-meta {
    flex-shrink: 0;
    font-size: 0.75rem;
    color: var(--tree-text-muted);
    font-weight: 400;
  }
  
  .zen-file-size {
    min-width: 3rem;
    text-align: right;
  }
  
  .zen-file-modified {
    min-width: 5rem;
    text-align: right;
  }
  
  .zen-file-children {
    position: relative;
    padding-left: var(--tree-indent);
    margin-top: var(--tree-gap);
  }
  
  .zen-file-tree.show-lines .zen-file-children {
    border-left: 1px dashed var(--tree-line);
    margin-left: calc(var(--file-icon-size) / 2);
  }
  
  .zen-file-tree.show-lines .zen-file-children::before {
    content: '';
    position: absolute;
    top: calc(-1 * var(--tree-gap));
    left: -1px;
    width: calc(var(--tree-indent) / 2);
    height: 1px;
    background: var(--tree-line);
  }
  
  .zen-file-tree.show-lines .zen-file-item:not(:last-child) .zen-file-children::after {
    content: '';
    position: absolute;
    top: calc(-1 * var(--tree-gap));
    bottom: 0;
    left: -1px;
    width: 1px;
    background: var(--tree-line);
  }
  

  .zen-file-item.folder .zen-file-name {
    font-weight: 600;
    color: var(--zen-primary-600, #0284c7);
  }
  
  .zen-file-item.symlink .zen-file-name {
    font-style: italic;
    color: var(--zen-text-muted);
  }
  
  .zen-file-tree.compact .zen-file-item {
    --file-item-padding: var(--zen-space-xs, 0.5rem);
    --file-item-gap: var(--zen-space-xs, 0.5rem);
    --file-icon-size: 1rem;
  }
  
  .zen-file-tree.compact .zen-file-meta {
    display: none;
  }
  

  .zen-file-tree.detailed .zen-file-item {
    --file-item-padding: var(--zen-space-sm, 0.75rem);
    --file-item-gap: var(--zen-space, 1rem);
    --file-icon-size: 1.5rem;
  }

  .zen-file-collapsible .zen-file-children {
    overflow: hidden;
    transition: all 0.3s var(--zen-ease-out, cubic-bezier(0, 0, 0.2, 1));
  }
  
  .zen-file-collapsible:not([open]) .zen-file-children {
    max-height: 0;
    margin-top: 0;
    opacity: 0;
  }
  
  .zen-file-collapsible[open] .zen-file-children {
    max-height: 1000px;
    opacity: 1;
  }
  
  .zen-file-collapsible summary:focus-visible {
    outline: 2px solid var(--zen-primary-500, #0ea5e9);
    outline-offset: 2px;
  }
  
  @media (max-width: 768px) {
    .zen-file-meta {
      display: none;
    }
    
    .zen-file-item {
      --file-item-gap: var(--zen-space-xs, 0.5rem);
      --file-icon-size: 1rem;
    }
  }
  
  @media (prefers-reduced-motion: reduce) {
    .zen-file-header,
    .zen-file-toggle,
    .zen-chevron,
    .zen-file-children {
      transition: none;
    }
    
    .zen-file-header:hover {
      transform: none;
    }
  }
</style>