---
interface Props {
  name: string;
  type: string;
  required?: boolean;
  deprecated?: boolean;
  defaultValue?: string;
  description?: string;
  examples?: string[];
  since?: string;
  tags?: string[];
}

const { 
  name, 
  type, 
  required = false, 
  deprecated = false,
  defaultValue,
  description,
  examples = [],
  since,
  tags = []
} = Astro.props;

const fieldId = `field-${Math.random().toString(36).substr(2, 9)}`;
---

<div class:list={["zen-field-item", { required, deprecated }]} id={fieldId}>
  <div class="zen-field-header">
    <div class="zen-field-main">
      <h4 class="zen-field-name">
        {name}
      </h4>
      
      <div class="zen-field-meta">
        <span class="zen-field-type">{type}</span>
        
        {required && (
          <span class="zen-field-badge required">Required</span>
        )}
        
        {deprecated && (
          <span class="zen-field-badge deprecated">Deprecated</span>
        )}
        
        {since && (
          <span class="zen-field-badge since">Since {since}</span>
        )}
      </div>
    </div>
    
    {defaultValue && (
      <div class="zen-field-default">
        <span class="zen-field-default-label">Default:</span>
        <code class="zen-field-default-value">{defaultValue}</code>
      </div>
    )}
  </div>
  
  {(description || examples.length > 0 || tags.length > 0) && (
    <div class="zen-field-body">
      {description && (
        <div class="zen-field-description">
          <Fragment set:html={description} />
        </div>
      )}
      
      {examples.length > 0 && (
        <div class="zen-field-examples">
          <h5 class="zen-field-examples-title">Examples:</h5>
          <div class="zen-field-examples-list">
            {examples.map(example => (
              <code class="zen-field-example">{example}</code>
            ))}
          </div>
        </div>
      )}
      
      {tags.length > 0 && (
        <div class="zen-field-tags">
          {tags.map(tag => (
            <span class="zen-field-tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  )}
  
  <div class="zen-field-content">
    <slot />
  </div>
</div>

<style>
  .zen-field-item {
    --field-item-padding: var(--zen-space-lg, 1.5rem);
    --field-item-border-color: var(--zen-border-light, #f1f5f9);
    
    position: relative;
    padding: var(--field-item-padding);
    border-bottom: 1px solid var(--field-item-border-color);
    transition: all 0.2s var(--zen-ease, cubic-bezier(0.4, 0, 0.2, 1));
  }
  
  .zen-field-item:last-child {
    border-bottom: none;
  }
  
  .zen-field-item:hover {
    background: var(--sl-color-accent-low, rgba(14, 165, 233, 0.02));
  }
  
  .zen-field-item.deprecated {
    opacity: 0.7;
    position: relative;
  }
  
  .zen-field-item.deprecated::after {
    content: '';
    position: absolute;
    top: 50%;
    left: var(--field-item-padding);
    right: var(--field-item-padding);
    height: 1px;
    background: var(--zen-text-muted, #64748b);
    opacity: 0.5;
  }
  
  .zen-field-header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: var(--zen-space, 1rem);
    margin-bottom: var(--zen-space-sm, 0.75rem);
  }
  
  .zen-field-main {
    flex: 1;
    min-width: 0;
  }
  
  .zen-field-name {
    margin: 0 0 var(--zen-space-xs, 0.5rem) 0;
    font-size: 1.125rem;
    font-weight: 600;
    font-family: var(--sl-font-code, 'JetBrains Mono', 'Fira Code', Consolas, monospace);
    color: var(--zen-primary-600, #0284c7);
    line-height: 1.3;
  }
  
  .zen-field-meta {
    display: flex;
    align-items: center;
    gap: var(--zen-space-xs, 0.5rem);
    flex-wrap: wrap;
  }
  
  .zen-field-type {
    background: var(--zen-bg-elevated, #f8fafc);
    border: 1px solid var(--zen-border, #e5e7eb);
    color: var(--zen-text-main, #334155);
    padding: 0.125rem 0.5rem;
    border-radius: var(--zen-radius-sm, 0.5rem);
    font-size: 0.8125rem;
    font-family: var(--sl-font-code, 'JetBrains Mono', 'Fira Code', Consolas, monospace);
    font-weight: 500;
  }
  
  .zen-field-badge {
    padding: 0.125rem 0.5rem;
    border-radius: var(--zen-radius-sm, 0.5rem);
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }
  
  .zen-field-badge.required {
    background: rgba(239, 68, 68, 0.1);
    color: #dc2626;
    border: 1px solid rgba(239, 68, 68, 0.2);
  }
  
  .zen-field-badge.deprecated {
    background: rgba(245, 158, 11, 0.1);
    color: #d97706;
    border: 1px solid rgba(245, 158, 11, 0.2);
  }
  
  .zen-field-badge.since {
    background: rgba(139, 92, 246, 0.1);
    color: #7c3aed;
    border: 1px solid rgba(139, 92, 246, 0.2);
  }
  
  .zen-field-default {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    gap: var(--zen-space-xs, 0.5rem);
    padding: var(--zen-space-xs, 0.5rem) var(--zen-space-sm, 0.75rem);
    background: var(--zen-bg-elevated, #f8fafc);
    border: 1px solid var(--zen-border, #e5e7eb);
    border-radius: var(--zen-radius-sm, 0.5rem);
  }
  
  .zen-field-default-label {
    font-size: 0.75rem;
    font-weight: 500;
    color: var(--zen-text-muted, #64748b);
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }
  
  .zen-field-default-value {
    font-size: 0.8125rem;
    font-family: var(--sl-font-code, 'JetBrains Mono', 'Fira Code', Consolas, monospace);
    color: var(--zen-primary-600, #0284c7);
    background: none;
    padding: 0;
  }
  
  .zen-field-body {
    margin-bottom: var(--zen-space, 1rem);
  }
  
  .zen-field-description {
    margin-bottom: var(--zen-space, 1rem);
    color: var(--zen-text-main, #334155);
    line-height: 1.6;
  }
  
  .zen-field-description > *:first-child {
    margin-top: 0;
  }
  
  .zen-field-description > *:last-child {
    margin-bottom: 0;
  }
  
  .zen-field-examples {
    margin-bottom: var(--zen-space, 1rem);
  }
  
  .zen-field-examples-title {
    margin: 0 0 var(--zen-space-sm, 0.75rem) 0;
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--zen-text-headings, #0f172a);
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }
  
  .zen-field-examples-list {
    display: flex;
    flex-direction: column;
    gap: var(--zen-space-xs, 0.5rem);
  }
  
  .zen-field-example {
    display: block;
    padding: var(--zen-space-xs, 0.5rem) var(--zen-space-sm, 0.75rem);
    background: var(--sl-color-accent-low, rgba(14, 165, 233, 0.05));
    border: 1px solid var(--zen-border, #e5e7eb);
    border-radius: var(--zen-radius-sm, 0.5rem);
    font-size: 0.8125rem;
    font-family: var(--sl-font-code, 'JetBrains Mono', 'Fira Code', Consolas, monospace);
    color: var(--zen-primary-600, #0284c7);
  }
  
  .zen-field-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--zen-space-xs, 0.5rem);
    margin-bottom: var(--zen-space, 1rem);
  }
  
  .zen-field-tag {
    padding: 0.25rem 0.75rem;
    background: var(--zen-bg-elevated, #f8fafc);
    border: 1px solid var(--zen-border, #e5e7eb);
    border-radius: var(--zen-radius-xl, 1.5rem);
    font-size: 0.75rem;
    font-weight: 500;
    color: var(--zen-text-muted, #64748b);
    transition: all 0.2s var(--zen-ease, cubic-bezier(0.4, 0, 0.2, 1));
  }
  
  .zen-field-tag:hover {
    background: var(--sl-color-accent-low, rgba(14, 165, 233, 0.1));
    border-color: var(--zen-primary-500, #0ea5e9);
    color: var(--zen-primary-600, #0284c7);
  }
  
  .zen-field-content > *:first-child {
    margin-top: 0;
  }
  
  .zen-field-content > *:last-child {
    margin-bottom: 0;
  }
  
  /* Cards variant styling */
  .zen-field-group.cards .zen-field-item {
    border: 1px solid var(--zen-border, #e5e7eb);
    border-radius: var(--zen-radius, 0.75rem);
    background: var(--zen-bg-content, #ffffff);
    box-shadow: var(--zen-shadow-xs, 0 1px 3px rgba(0, 0, 0, 0.04));
    transition: all 0.2s var(--zen-ease, cubic-bezier(0.4, 0, 0.2, 1));
  }
  
  .zen-field-group.cards .zen-field-item:hover {
    transform: translateY(-2px);
    box-shadow: var(--zen-shadow, 0 4px 20px rgba(14, 165, 233, 0.08));
  }
  
  /* Table variant styling */
  .zen-field-group.table .zen-field-item {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: var(--zen-space-lg, 1.5rem);
    align-items: start;
    padding: var(--zen-space, 1rem) var(--field-item-padding);
  }
  
  .zen-field-group.table .zen-field-header {
    margin-bottom: 0;
  }
  
  /* Dark theme */
  html[data-theme='dark'] .zen-field-item {
    --field-item-border-color: var(--zen-border, #4b5563);
  }
  
  html[data-theme='dark'] .zen-field-type {
    background: var(--zen-bg-elevated, #374151);
    border-color: var(--zen-border, #4b5563);
    color: var(--zen-text-main, #f3f4f6);
  }
  
  html[data-theme='dark'] .zen-field-default {
    background: var(--zen-bg-elevated, #374151);
    border-color: var(--zen-border, #4b5563);
  }
  
  html[data-theme='dark'] .zen-field-example {
    background: var(--sl-color-accent-low, rgba(14, 165, 233, 0.1));
    border-color: var(--zen-border, #4b5563);
  }
  
  html[data-theme='dark'] .zen-field-tag {
    background: var(--zen-bg-elevated, #374151);
    border-color: var(--zen-border, #4b5563);
    color: var(--zen-text-muted, #d1d5db);
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .zen-field-header {
      flex-direction: column;
      align-items: stretch;
      gap: var(--zen-space-sm, 0.75rem);
    }
    
    .zen-field-default {
      align-self: flex-start;
    }
    
    .zen-field-group.table .zen-field-item {
      grid-template-columns: 1fr;
      gap: var(--zen-space, 1rem);
    }
  }
  
  @media (max-width: 480px) {
    .zen-field-item {
      --field-item-padding: var(--zen-space, 1rem);
    }
    
    .zen-field-examples-list {
      gap: var(--zen-space-xs, 0.5rem);
    }
    
    .zen-field-meta {
      flex-direction: column;
      align-items: flex-start;
    }
  }
</style>