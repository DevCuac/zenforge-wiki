---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'div'> {
  title: string;
  icon: 'info' | 'fire' | 'warning' | 'check';
}
const { title, icon, ...attrs } = Astro.props;

const ICONS = {
  info: `
    <svg xmlns="[http://www.w3.org/2000/svg](http://www.w3.org/2000/svg)" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
    </svg>
  `,
  fire: `
    <svg xmlns="[http://www.w3.org/2000/svg](http://www.w3.org/2000/svg)" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path>
    </svg>
  `,
  warning: `
    <svg xmlns="[http://www.w3.org/2000/svg](http://www.w3.org/2000/svg)" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="m21.73 18-8-14a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"></path>
      <line x1="12" y1="9" x2="12" y2="13"></line>
      <line x1="12" y1="17" x2="12.01" y2="17"></line>
    </svg>
  `,
  check: `
    <svg xmlns="[http://www.w3.org/2000/svg](http://www.w3.org/2000/svg)" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="20 6 9 17 4 12"></polyline>
    </svg>
  `,
};


const baseClasses = 'not-prose rounded-lg p-4 my-6 flex flex-col gap-2 border-l-4';

const accentColors = {
  info: 'var(--sl-color-blue)',
  fire: 'var(--sl-color-red)',
  warning: 'var(--sl-color-yellow)',
  check: 'var(--sl-color-green)',
};
---
<div class="zen-card not-prose" style={`--card-accent-color: ${accentColors[icon]}`} {...attrs}>
  <div class="zen-card-header">
    <Fragment set:html={ICONS[icon]} />
    <h3>{title}</h3>
  </div>
  <div class="zen-card-content">
    <slot />
  </div>
</div>

<style>
.zen-card {
  background: linear-gradient(145deg, var(--sl-color-bg-accent), var(--sl-color-bg));
  border-radius: 0.75rem;
  border: 1px solid var(--sl-color-border);
  padding: 1.5rem;
  margin-top: 2rem;
  margin-bottom: 2rem;
  overflow: hidden;
  position: relative;
}

.zen-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background-color: var(--card-accent-color);
}

.zen-card-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.75rem;
}

.zen-card-header svg {
  width: 1.25rem;
  height: 1.25rem;
  color: var(--card-accent-color);
}

.zen-card-header h3 {
  margin: 0;
  font-size: 1rem;
  font-weight: 700;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  color: var(--sl-color-heading);
}

.zen-card-content {
  padding-left: 2rem;
  font-size: 0.9rem;
  color: var(--sl-color-text);
}
.zen-card-content p {
    margin: 0;
}
</style>
